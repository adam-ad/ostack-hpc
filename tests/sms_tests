#!/bin/bash

ERROR () {
    echo "[ERROR]: $1" >&2
    exit 1
}

USAGE () {
    echo " "
    echo "Usage: run-tests [-r|-u|-l]"
    echo " "
    echo "   -r  include root-level tests"
    echo "   -u  include user-level tests"
    echo "   -l  enable long version user-level tests (requires -u)"
    echo "   -s  enables cloud hpc tests executed from sms node in cloud  (requires -s)"
    echo "   -o  enables OpenStack integration tests executed from openstack controller (requires -o)"
    echo " "
    echo "   The default is to run short user level tests only (-u)."
    echo " "
    exit 1
}





setup_tests()
{
    #bootstrap
    configure
    # run input.local to get input parameters
    load common/test_helper_functions || exit 1
    source common/functions || exit 1
    
    if [ -s common/TEST_ENV ];then
        source common/TEST_ENV
    fi
    
}

run_user_level_tests()
{
    echo " "
    echo "Running User-Level Tests"
    echo " "

    cd ${TEST_DIR} || ERROR "Unable to access top level test directory"

    export BATS_JUNIT_GROUP="UserLevelTests"

    local config_opts=""
    if [ "${EnableLongTests}" == "true" ];then
        config_opts="--enable-long"
    fi

    # create execution test script
    cat <<EOF > ${TEST_USER_SCRIPT}
#!/bin/bash
export BATS_ENABLE_TIMING=1
export BATS_JUNIT_FORMAT=1
export BATS_JUNIT_GROUP="UserLevelTests"
export AUTOMAKE_JUNIT_FILE=1

cd "$TEST_DIR/" || exit 1
#[[ -f Makefile ]] && make clean && make distclean
#./bootstrap || exit 1
./configure $config_opts || exit 1
make -k VERBOSE=1 check
EOF

    sudo chown -fR ${TEST_USER}: ${TEST_DIR} || ERROR "Unable to update perms for ${TEST_DIR}"
    sudo chown -fR ${TEST_USER}: ${TEST_USER_SCRIPT} || ERROR "Unable to update perms for ${TEST_USER_SCRIPT}"
    sudo su - ${TEST_USER} ${TEST_USER_SCRIPT}
 
    USER_STATUS=$?
    cd - >& /dev/null
    return $USER_STATUS
}

TEST_DIR=${TESTSUITE_DIR}TEST_USER=${TESTSUITE_USER}
TEST_USER_SCRIPT="/tmp/user_integration_tests"

# clear options
RootLevelTests=false
UserLevelTests=false
EnableLongTests=false
OControllerTests=false
ChpcSmsTests=false

# get options
while getopts "rul" opt; do
    case $opt in
        r)
            RootLevelTests=true
            ;;
        u)
            UserLevelTests=true
            ;;
        l)
            EnableLongTests=true
            ;;
        o)
            OControllerTests=true
            ;;
        s)
            ChpcSmsTests=true
            ;;
        *)
            USAGE
            ;;
    esac
done

# check options
if [ "${UserLevelTests}" == "false" ] && \
    ( [ "${RootLevelTests}" == "false" ] || \
      [ "${EnableLongTests}" == "true" ] ); then
    USAGE
fi

# launch tests
export BATS_JUNIT_FORMAT=1
export BATS_ENABLE_TIMING=1
export AUTOMAKE_JUNIT_FILE=1

echo " "
echo "Cloud HPC Test Configuration:"
echo " "
echo "    Root Level Testing = ${RootLevelTests}"
echo "    User Level Testing = ${UserLevelTests}"
echo "    OpenStack Controller Tests = ${OControllerTests}"
echo "    Cloud HPC SMS Tests = ${ChpcSmsTests}"

echo "    Enable Long Tests  = ${EnableLongTests}"


#-----------------
# tests execution
#-----------------

uid=$(id -u)

if [ "${RootLevelTests}" == "true" ];then
    [ $uid -eq 0 ] || ERROR "Only root may run root level tests"
    time run_root_level_tests
fi

if [ "${OControllerTests}" == "true" ];then
    time run_controller_tests
fi

if [ "${ChpcSmsTests}" == "true" ];then
    time run_chpc_sms_tests
fi

if [ "${UserLevelTests}" == "true" ];then
    time run_user_level_tests
fi
