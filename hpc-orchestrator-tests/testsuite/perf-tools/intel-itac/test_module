#!./common/bats/bin/bats 
# -*-sh-*-

source ./common/test_helper_functions.bash || exit 1
source ./common/functions                  || exit 1

if [ -s ./TEST_ENV ];then
    source ./TEST_ENV
fi

check_rms

PKG=ITAC
testname="Intel ITAC"
module=itac
header=
library=libVT.a
rpm=intel-itac${DELIM}

setup() {
    module purge
    module load prun
    module load intel impi $module
}

@test "[$testname] Verify $module module is loaded and matches rpm version" {
    module list $module | grep "1) $module" >& .cmd_output || exit 1
    run grep $module .cmd_output 
    assert_success
    
    # check version against rpm
    local version="$(rpm -q --queryformat='%{VERSION}\n' $rpm)"
    run cat .cmd_output
    assert_output "  1) $module/$version"
}

@test "[$testname] Verify module ${PKG}_DIR is defined and exists" {
    DIR=${PKG}_DIR
    if [ -z ${!DIR} ];then
        flunk "${PKG}_DIR directory not defined"
    fi
    
    if [ ! -d ${!DIR} || -z "${!DIR}" ];then
        flunk "directory ${!DIR} does not exist"
    fi 
}

# ----------
# Binaries
# ----------

@test "[$testname] Verify module ${PKG}_BIN is defined and exists" {
    BIN=${PKG}_BIN
    if [ -z ${!BIN} ];then
        flunk "${PKG}_BIN directory not defined"
    fi
    
    if [ ! -d ${!BIN} || -z "${!BIN}" ];then
        flunk "directory ${!BIN} does not exist"
    fi 
}

@test "[$testname] Verify availability/execution of mps binary" {
    run which mps
    assert_success

    run mps --version
    assert_success
}

@test "[$testname] Verify availability of traceanalyzer binary" {
    run which traceanalyzer
    assert_success
}

# ----------
# Man pages
# ----------

@test "[$testname] Verify availability of man page for VT" {
    DIR=${PKG}_DIR

    if [ -z ${!DIR} ];then
        flunk "${PKG}_DIR directory not defined"
    fi

    if [ ! -d ${!DIR} || -z "${!DIR}" ];then
        flunk "directory ${!DIR} does not exist"
    fi 
    
    run man -w VT
    assert_success
    assert_output "${!DIR}/man/man3/VT.3"
}

# ----------
# Lib Tests
# ----------

@test "[$testname] Verify module ${PKG}_LIB is defined and exists" {
    LIB=${PKG}_LIB

    if [ -z ${!LIB} ];then
        flunk "${PKG}_LIB directory not defined"
    fi
 
    if [ ! -d ${!LIB} ];then
        flunk "directory ${!LIB} does not exist"
    fi 
}

@test "[$testname] Verify VT library available in ${PKG}_LIB" {
    LIB=${PKG}_LIB

    if [ -z ${!LIB} ];then
        flunk "${PKG}_LIB directory not defined"
    fi

    if [ ! -s ${!LIB}/${library} ];then
        flunk "${library} does not exist"
    fi 
}

# ----------
# Tracing
# ----------

@test "[$testname] Build and run a tracing/data collection test under resource manager ($RESOURCE_MANAGER)" {

    rm -f trace_test
    rm -f trace_test.*

    run mpicc -g -O2 -trace -o trace_test trace.c
    assert_success

    run_mpi_binary ./trace_test "atest" 1 4
    assert_success

    # verify we got the tracing file for task 3

    run ls trace_test.stf.f.3
    assert_success

    # verify we see an Allreduce 
    run traceanalyzer --cli --collopprofile ./trace_test.stf -o ./output.txt
    assert_success

    run ls output.txt
    assert_success

    grep -q MPI_Allreduce output.txt
    assert_success

    rm -f trace_test trace_test.* output.txt job.*.out
}

rm -f .cmd_output

