#!./common/bats/bin/bats 
# -*-sh-*-

source ./common/test_helper_functions.bash || exit 1
source ./common/functions                  || exit 1

if [ -s ./TEST_ENV ];then
    source ./TEST_ENV
fi

check_rms

PKG=VTUNE
testname="Intel Vtune"
module=vtune

# -------------------
# Hotspot Collection
# -------------------

@test "[$testname] Run Vtune under resource manager ($RESOURCE_MANAGER/$LMOD_FAMILY_COMPILER/$LMOD_FAMILY_MPI)" {
    rm -rf vtune_result
    rm -rf vtune_result.*

    if [ ! -x dgemm ];then
        flunk "dgemm executable not available"
    fi

    run mkdir vtune_result
    assert_success

    echo "#!/bin/bash" > .job.vtune
    echo "amplxe-cl -collect advanced-hotspots -r vtune_result -no-auto-finalize ./dgemm 10 500 32 1" >> .job.vtune
    chmod 700 .job.vtune

    run run_mpi_binary ./.job.vtune atest 2 8
    assert_success

    rm -f .job.vtune

    # verify we got the tracing file for a task

    run ls -ld vtune_result.*/data.0
    assert_success

    resultDir=`ls -d vtune_result.* | head -1`

    # generate report
    rm -f vtune_result.txt

    run amplxe-cl -r $resultDir -report hotspots -quiet -format text -search-dir=src -report-output vtune_result.txt
    assert_success

    run ls vtune_result.txt
    assert_success

    # verify dgemm function is visible
    run grep "^\[dgemm\]" vtune_result.txt
    assert_success

    rm -rf vtune_result
    rm -f vtune_result.txt
}

rm -f .cmd_output

