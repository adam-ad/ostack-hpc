#!bin/bash
set -x
function prepare_user_image() {
    if [[ ${chpc_create_new_image} -ne 1 ]] && [[ -s $chpc_image_user ]]; then
        # No need to create an image, image is provided by user
        echo -n "Skiping cloud user-image build, Image provided:"
        echo "$chpc_image_user"
        CHPC_IMAGE_DEST=$CHPC_CLOUD_IMAGE_PATH/$(basename $chpc_image_user)
        if [[ ! -e $CHPC_IMAGE_DEST ]]; then
            sudo cp $chpc_image_user $CHPC_CLOUD_IMAGE_PATH
        fi
        chpc_image_user=$CHPC_IMAGE_DEST
    else
        echo "Building new User Image"
        #enable local disk-image-builder
        # Check if disk-image-builder is installed
        yum -y install diskimage-builder PyYAML
        #install grub dependency
        yum -y install parted
        # copy patch to installed location
        sudo cp -fr ../dib/dib_patch/* /usr/share/diskimage-builder/
        
        # For Debugging enable user
        #export PATH=/home/ppk/PPK/dib/dev/diskimage-builder/bin:/home/ppk/PPK/dib/dev/dib-utils/bin:$PATH
        # if cloudinit does not work then we will use this user for debugging
        export DIB_DEV_USER_USERNAME=chpc
        export DIB_DEV_USER_PASSWORD=intel8086
        export DIB_DEV_USER_PWDLESS_SUDO=1
        # For debugging enable DEBUG_TRACE
        #export DIB_DEBUG_TRACE=1
        # Add our custom element path
        export ELEMENTS_PATH="$(realpath ../dib/hpc/elements)"
        # define base for image as ohpc or orch.
        export DIB_HPC_BASE=${chpc_base}
        # path to hpc configuration files i.e. cloud.cfg
        export DIB_HPC_FILE_PATH="$(realpath ../dib/hpc/hpc-files/)"

        #Path to HPC base yum repo file
        # We support either Intel HPC Orchestrator and OpenHPC
        if [[ "${DIB_HPC_BASE}" == "orch" ]]; then
            export DIB_YUM_REPO_CONF=/etc/yum.repos.d/HPC_Orchestrator.repo
            # for orch define Packge path
	    # This file is used to install orch component inside image
            export DIB_HPC_ORCH_PKG=${orch_iso_path}
        else
            # Install the OpenHPC rpm
            yum -y install ${ohpc_pkg}	
            export DIB_HPC_OHPC_PKG=${ohpc_pkg}
        fi

        DIB_HPC_ELEMENTS="hpc-env-base hpc-slurm"
        #add mrsh if it is enabled
        if [[ ${enable_mrsh} -eq 1 ]];then
           DIB_HPC_ELEMENTS+=" hpc-mrsh"
        fi
        # build an image
        echo "====================================================================="
        echo "=== Preparing cloud-hpc user image =================================="
        echo "====================================================================="
        disk-image-create centos7 vm local-config dhcp-all-interfaces devuser $DIB_HPC_ELEMENTS -o icloud-hpc-cent7 
        echo "====================================================================="
        echo "=== User Image Creation complete ===================================="
        echo "====================================================================="
        # User Image is reday
        chpc_image_user="$( realpath icloud-hpc-cent7.qcow2)"
        mkdir -p $CHPC_CLOUD_IMAGE_PATH 
        mv -f $chpc_image_user $CHPC_CLOUD_IMAGE_PATH 
        chpc_image_user=$CHPC_CLOUD_IMAGE_PATH/$(basename $chpc_image_user)
    fi 
}

function prepare_deploy_image() {
    if [[ ${chpc_create_new_image} -ne 1 ]] && [[ -s $chpc_image_deploy_kernel ]] && [[ -s $chpc_image_deploy_ramdisk ]]; then
        # No need to create an image, image is provided by user
        echo "Skiping cloud deploy-image build, Image provided:"
        echo "Deploy kernel Image:$chpc_image_deploy_kernel"
        echo "Deploy ramdisk Image:$chpc_image_deploy_ramdisk"
        #Store Images file
        CHPC_IMAGE_DEST=$CHPC_CLOUD_IMAGE_PATH/$(basename $chpc_image_deploy_kernel)
        if [[ ! -e $CHPC_IMAGE_DEST ]]; then
            sudo cp -f $chpc_image_deploy_kernel $CHPC_CLOUD_IMAGE_PATH/
        fi
        chpc_image_deploy_kernel=$CHPC_IMAGE_DEST
        CHPC_IMAGE_DEST=$CHPC_CLOUD_IMAGE_PATH/$(basename $chpc_image_deploy_ramdisk)
        if [[ ! -e $CHPC_IMAGE_DEST ]]; then
            sudo cp -f $chpc_image_deploy_ramdisk $CHPC_CLOUD_IMAGE_PATH/
        fi
        chpc_image_deploy_ramdisk=$CHPC_IMAGE_DEST
    else
        echo "Building new Cloud Deploy Image"
        echo "====================================================================="
        echo "=== Preparing cloud-hpc deploy images for ironic====================="
        echo "====================================================================="
        #prepare deploy images
        # First unset any previos envirnment flag
        unset DIB_YUM_REPO_CONF
        #Install git if it is not already installed
        yum -y install git
        disk-image-create ironic-agent centos7 -o icloud-hpc-deploy-c7
        echo "====================================================================="
        echo "=== cloud-hpc deploy images Complete ================================"
        echo "====================================================================="
        chpc_image_deploy_kernel="$( realpath icloud-hpc-deploy-c7.kernel)"
        chpc_image_deploy_ramdisk="$( realpath icloud-hpc-deploy-c7.initramfs)"
        #Store Images file
        mkdir -p $CHPC_CLOUD_IMAGE_PATH/
        sudo mv -f $chpc_image_deploy_kernel $CHPC_CLOUD_IMAGE_PATH/
        chpc_image_deploy_kernel=$CHPC_CLOUD_IMAGE_PATH/$(basename $chpc_image_deploy_kernel)
        sudo mv -f $chpc_image_deploy_ramdisk $CHPC_CLOUD_IMAGE_PATH/
        chpc_image_deploy_ramdisk=$CHPC_CLOUD_IMAGE_PATH/$(basename $chpc_image_deploy_ramdisk)
    fi
}

if [[ "${chpc_base}" == "orch" ]]; then 
    CHPC_CLOUD_IMAGE_PATH=/opt/intel/hpc-orchestrator/admin/images/cloud/
else
    CHPC_CLOUD_IMAGE_PATH=/opt/ohpc/admin/images/cloud/
fi

mkdir -p $CHPC_CLOUD_IMAGE_PATH
### Build HPC user image
prepare_user_image
#### Build hpc deploy image
prepare_deploy_image

echo $chpc_image_deploy_kernel
echo $chpc_image_deploy_ramdisk
echo $chpc_image_user
