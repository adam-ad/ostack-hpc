#!../../../common/bats/bin/bats
# -*-sh-*-

load ./common/test_helper_functions || exit 1
source ./common/functions || exit 1

if [ -s ./TEST_ENV ];then
    source ./TEST_ENV
fi

if [ "$RESOURCE_MANAGER" = "slurm" ];then
    rm=slurm
else
    ERROR "Unsupported or unknown resource manager"
    exit 1
fi

testname="libs/openblas"

NODES=1
TASKS=1
ARGS=0

@test "[$testname/xscblat1] xscblat1 under resource manager ($rm/$LMOD_FAMILY_COMPILER)" {
    if [ ! -s xscblat1 ];then
	flunk "xscblat1 binary does not exit"
    fi

    run_mpi_binary ./xscblat1 $ARGS $NODES $TASKS
    assert_success
}

@test "[$testname/xdcblat1] xdcblat1 under resource manager ($rm/$LMOD_FAMILY_COMPILER)" {
    if [ ! -s xdcblat1 ];then
	flunk "xdcblat1 binary does not exit"
    fi

    run_mpi_binary ./xdcblat1 $ARGS $NODES $TASKS
    assert_success
}

@test "[$testname/xccblat1] xccblat1 under resource manager ($rm/$LMOD_FAMILY_COMPILER)" {
    if [ ! -s xccblat1 ];then
	flunk "xccblat1 binary does not exit"
    fi

    run_mpi_binary ./xccblat1 $ARGS $NODES $TASKS
    assert_success
}

@test "[$testname/xzcblat1] xzcblat1 under resource manager ($rm/$LMOD_FAMILY_COMPILER)" {
    if [ ! -s xzcblat1 ];then
	flunk "xzcblat1 binary does not exit"
    fi

    run_mpi_binary ./xzcblat1 $ARGS $NODES $TASKS
    assert_success
}

@test "[$testname/xscblat2] xscblat2 under resource manager ($rm/$LMOD_FAMILY_COMPILER)" {
    if [ ! -s xscblat2 ];then
	flunk "xscblat2 binary does not exit"
    fi

    run_mpi_binary -i sin2 ./xscblat2 $ARGS $NODES $TASKS
    assert_success
}

@test "[$testname/xdcblat2] xdcblat2 under resource manager ($rm/$LMOD_FAMILY_COMPILER)" {
    if [ ! -s xdcblat2 ];then
	flunk "xdcblat2 binary does not exit"
    fi

    run_mpi_binary -i din2 ./xdcblat2 $ARGS $NODES $TASKS
    assert_success
}

@test "[$testname/xccblat2] xccblat2 under resource manager ($rm/$LMOD_FAMILY_COMPILER)" {
    if [ ! -s xccblat2 ];then
	flunk "xccblat2 binary does not exit"
    fi

    run_mpi_binary -i cin2 ./xccblat2 $ARGS $NODES $TASKS
    assert_success
}

@test "[$testname/xzcblat2] xzcblat2 under resource manager ($rm/$LMOD_FAMILY_COMPILER)" {
    if [ ! -s xzcblat2 ];then
	flunk "xzcblat2 binary does not exit"
    fi

    run_mpi_binary -i zin2 ./xzcblat2 $ARGS $NODES $TASKS
    assert_success
}

@test "[$testname/xscblat3] xscblat3 under resource manager ($rm/$LMOD_FAMILY_COMPILER)" {
    if [ ! -s xscblat3 ];then
	flunk "xscblat3 binary does not exit"
    fi

    run_mpi_binary -i sin3 ./xscblat3 $ARGS $NODES $TASKS
    assert_success
}

@test "[$testname/xdcblat3] xdcblat3 under resource manager ($rm/$LMOD_FAMILY_COMPILER)" {
    if [ ! -s xdcblat3 ];then
	flunk "xdcblat3 binary does not exit"
    fi

    run_mpi_binary -i din3 ./xdcblat3 $ARGS $NODES $TASKS
    assert_success
}

@test "[$testname/xccblat3] xccblat3 under resource manager ($rm/$LMOD_FAMILY_COMPILER)" {
    if [ ! -s xccblat3 ];then
	flunk "xccblat3 binary does not exit"
    fi

    run_mpi_binary -i cin3 ./xccblat3 $ARGS $NODES $TASKS
    assert_success
}

@test "[$testname/xzcblat3] xzcblat3 under resource manager ($rm/$LMOD_FAMILY_COMPILER)" {
    if [ ! -s xzcblat3 ];then
	flunk "xzcblat3 binary does not exit"
    fi

    run_mpi_binary -i zin3 ./xzcblat3 $ARGS $NODES $TASKS
    assert_success
}
